[{"C:\\Development\\Projects\\BocUp\\client\\src\\index.js":"1","C:\\Development\\Projects\\BocUp\\client\\src\\components\\App.js":"2","C:\\Development\\Projects\\BocUp\\client\\src\\components\\chat\\Chat.js":"3","C:\\Development\\Projects\\BocUp\\client\\src\\reducers\\index.js":"4","C:\\Development\\Projects\\BocUp\\client\\src\\actions\\index.js":"5","C:\\Development\\Projects\\BocUp\\client\\src\\actions\\types.js":"6","C:\\Development\\Projects\\BocUp\\client\\src\\reducers\\authReducer.js":"7","C:\\Development\\Projects\\BocUp\\client\\src\\components\\login\\Login.js":"8","C:\\Development\\Projects\\BocUp\\client\\src\\components\\chat\\chatMessages\\MainChat.js":"9","C:\\Development\\Projects\\BocUp\\client\\src\\helperFunctions\\helpers.js":"10","C:\\Development\\Projects\\BocUp\\client\\src\\reducers\\mainMessagesReducer.js":"11","C:\\Development\\Projects\\BocUp\\client\\src\\reducers\\privateRoomsReducer.js":"12","C:\\Development\\Projects\\BocUp\\client\\src\\components\\chat\\chatMessages\\PrivateChat.js":"13","C:\\Development\\Projects\\BocUp\\client\\src\\history.js":"14"},{"size":1576,"mtime":1611219970881,"results":"15","hashOfConfig":"16"},{"size":1670,"mtime":1611922974498,"results":"17","hashOfConfig":"16"},{"size":6771,"mtime":1611922210176,"results":"18","hashOfConfig":"16"},{"size":370,"mtime":1610797064802,"results":"19","hashOfConfig":"16"},{"size":770,"mtime":1611232924117,"results":"20","hashOfConfig":"16"},{"size":250,"mtime":1610796165144,"results":"21","hashOfConfig":"16"},{"size":437,"mtime":1610121886831,"results":"22","hashOfConfig":"16"},{"size":677,"mtime":1610535342196,"results":"23","hashOfConfig":"16"},{"size":3135,"mtime":1610963917572,"results":"24","hashOfConfig":"16"},{"size":1222,"mtime":1610711511341,"results":"25","hashOfConfig":"16"},{"size":261,"mtime":1610713823431,"results":"26","hashOfConfig":"16"},{"size":1316,"mtime":1611224353289,"results":"27","hashOfConfig":"16"},{"size":3531,"mtime":1611921493547,"results":"28","hashOfConfig":"16"},{"size":87,"mtime":1611229742556,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1hndy9p",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Development\\Projects\\BocUp\\client\\src\\index.js",[],["62","63"],"C:\\Development\\Projects\\BocUp\\client\\src\\components\\App.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\components\\chat\\Chat.js",["64","65","66"],"import React, {Component} from 'react';\r\nimport \"./Chat.scss\";\r\nimport {connect} from 'react-redux';\r\nimport io from 'socket.io-client';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport {createPrivateRoom, addPrivateMessage} from '../../actions/index';\r\n\r\n\r\nimport MainChat from './chatMessages/MainChat';\r\nimport PrivateChat from './chatMessages/PrivateChat';\r\n\r\nclass Chat extends Component {\r\n  server = 'http://localhost:5000';\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sender: this.props.userData.ee.Es,\r\n      socketId: \"\",\r\n      activeUsers: [],\r\n      activeRooms: [],\r\n      activeChat: \"\",\r\n      chatRoom: \"\"\r\n    }\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.socket = io(this.server);\r\n\r\n    this.socket.on(\"socketConnected\", ({activeUsers, socketId}) => {\r\n      this.setState({\r\n        activeUsers,\r\n        socketId\r\n      });\r\n      this.socket.emit(\"fontEndConnected\", {socketId, userData: this.props.userData.ee.Es});\r\n    });\r\n    this.socket.on(\"usersUpdated\", (activeUsers) => {\r\n      this.setState({activeUsers});\r\n    });\r\n\r\n    this.socket.on(\"createPrivateRoom\", data => {\r\n      console.log(\"Create private room   \", data)\r\n      this.props.createPrivateRoom(data)\r\n    });\r\n\r\n    this.socket.on('privateMessage', data => {\r\n      this.props.addPrivateMessage(data)\r\n    })\r\n\r\n    this.socket.on(\"heiWillDisconnect\", msg => {\r\n      console.log(msg)\r\n    })\r\n  };\r\n\r\n\r\n\r\n\r\n  componentWillUnmount() {\r\n    this.socket.emit(\"iWillDisconnect\", {user: this.props.userData.wR, rooms: this.props.privateRooms})\r\n    this.socket.disconnect();\r\n  };\r\n\r\n  requestPrivateRoom = (data) => {\r\n    this.socket.emit(\"requestPrivateRoom\", data)\r\n  };\r\n\r\n  terminateRoom = (data) => {\r\n    let activeRooms = this.state.activeRooms.filter(room => room !== data);\r\n    this.setState({activeRooms})\r\n  }\r\n\r\n  renderActiveUsers = (data) => {\r\n    console.log(data)\r\n    // eslint-disable-next-line\r\n    return data.map(({userData, socketId}) => {\r\n      if (this.state.socketId !== socketId)\r\n        return (\r\n          // <Link to={``}>\r\n          <div onDoubleClick={() => {this.requestPrivateRoom(userData.wR);}} className=\"user\" key={socketId}>\r\n            <img src={userData.fI} alt={userData.sd} />\r\n            <h4>{userData.sd}</h4>\r\n          </div>\r\n          // </Link>\r\n        )\r\n    });\r\n  };\r\n\r\n\r\n\r\n  setActiveRoom = (data) => {\r\n    this.setState({activeChat: data})\r\n  };\r\n\r\n  renderChatLinks = (data) => {\r\n    let map = new Map(Object.entries(data));\r\n    // console.log(map)\r\n    return map.forEach(entry => {\r\n      return <li className=\"dummy-private-chat\">\r\n        <Link to={`private-chat-${entry.roomId}`}>New Room</Link>\r\n      </li>\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat-body\">\r\n\r\n\r\n        <div className=\"chat-users\">{this.state.activeUsers.length > 0 ? this.renderActiveUsers(this.state.activeUsers) : \"Ola\"}</div>\r\n\r\n\r\n        <div className=\"chat-messages-section\">\r\n          <Router >\r\n\r\n            <nav className=\"chat-navigation\">\r\n              <div className=\"main-chat\">\r\n                <h1 className=\"\"><Link to=\"/\">Main Chat</Link></h1>\r\n              </div>\r\n              <ul className=\"private-chat-list\">\r\n                {\r\n                  this.props.privateRooms && this.props.privateRooms.map((room, index) => {\r\n                    let who = room.users.filter(user => user.userData.wR !== this.props.userData.ee.Es.wR)[0]\r\n                    console.log(who)\r\n                    return <li key={index} className=\"dummy-private-chat\" key={room.roomId}>\r\n                      <Link to={`private-chat-${room.roomId}`}>{who.userData.sd}</Link>\r\n                    </li>\r\n                  })\r\n                }\r\n              </ul>\r\n            </nav>\r\n\r\n            <div className=\"chat-messages-background\">\r\n              <Switch>\r\n\r\n                <Route exact path=\"/\"><MainChat num=\"main\" socket={this.socket} userData={this.props.userData.ee.Es} /></Route>\r\n                {\r\n                  this.props.privateRooms.map((room, index) => {\r\n                    return (\r\n                      <Route exact path={`/private-chat-${room.roomId}`}>\r\n                        <PrivateChat key={index} roomData={room} messages={room.messages} socket={this.socket} userData={this.props.userData.ee.Es} />\r\n                      </Route>\r\n                    )\r\n                  })\r\n                }\r\n              </Switch>\r\n            </div>\r\n\r\n          </Router>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"user-profile\">\r\n          <div className=\"user-signout\">\r\n            <button className=\"unselectable\" onClick={this.props.onSignOutClick}>Sign Out</button>\r\n          </div>\r\n\r\n          <div className=\"user-image unselectable\">\r\n            <img src={this.props.userData.ee.Es.fI} alt={this.props.userData.ee.Es.sd} />\r\n            <h3>{this.props.userData.ee.Es.sd}</h3>\r\n          </div>\r\n\r\n          <div className=\"contacts-container\">\r\n            <h3>Contacts</h3>\r\n            <ul className=\"contact-list\">\r\n              {/* <li className=\"contact\">Contact 1</li>\r\n              <li className=\"contact\">Contact 2</li>\r\n              <li className=\"contact\">Contact 3</li>\r\n              <li className=\"contact\">Contact 4</li>\r\n              <li className=\"contact\">Contact 5</li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    privateRooms: Object.values(state.privateRooms)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {createPrivateRoom, addPrivateMessage})(Chat);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <div className=\"user\">\r\n            <img src={this.props.userData.ee.Es.PK} alt={this.props.userData.ee.Es.Ed} />\r\n            <h4>{this.props.userData.ee.Es.Ed}</h4>\r\n          </div> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* <div className=\"message-foreign\">\r\n                <div className=\"message-sender\">\r\n                  <img src={this.props.userData.ee.Es.PK} alt={this.props.userData.ee.Es.Ed} />\r\n                </div>\r\n                <div className=\"message-text\">\r\n                  Text from outsider\r\n                  <p>{new Date().getUTCHours()}:{new Date().getUTCMinutes()} h</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"message-me\">\r\n                <div className=\"message-sender\">\r\n                  <img src={this.props.userData.ee.Es.PK} alt={this.props.userData.ee.Es.Ed} />\r\n                </div>\r\n                <div className=\"message-text\">\r\n                  My text\r\n                  <p>{new Date().getUTCHours()}:{new Date().getUTCMinutes()} h</p>\r\n                </div>\r\n              </div> */}","C:\\Development\\Projects\\BocUp\\client\\src\\reducers\\index.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\actions\\index.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\actions\\types.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\reducers\\authReducer.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\components\\login\\Login.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\components\\chat\\chatMessages\\MainChat.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\helperFunctions\\helpers.js",["67"],"const renderMessage = (data) => {\r\n  console.log(data);\r\n  let date = `${new Date().getUTCHours()}:${new Date().getUTCMinutes()} h`\r\n  let from = data.sender.OU === this.props.userData.we.Ea ? \"me\" : \"foreign\";\r\n  let msg = document.createElement(\"div\");\r\n  msg.classList.add(`message-${from}`);\r\n  msg.innerHTML = `\r\n    <div class=\"message-sender\">\r\n    <img src=${data.sender.PK} alt=${data.sender.qW} />\r\n\r\n    </div>\r\n    <div class=\"message-text\">\r\n      <span class=\"text-paragraph\">${data.message}<span/>\r\n      <p class=\"date-paragraph\">${date}</p>\r\n    </div>`;\r\n  document.querySelector('.chat-messages').appendChild(msg)\r\n};\r\n\r\nexport const createMessage = ({message, sender}) => {\r\n  let date = `${new Date().getUTCHours()}:${new Date().getUTCMinutes()} h`;\r\n  let from = sender.OU === this.props.userData.we.Ea ? \"me\" : \"foreign\";\r\n  let msgDiv = document.createElement(\"div\");\r\n  msgDiv.classList.add(`message-${from}`);\r\n  message.innerHTML = `\r\n  <div class=\"message-sender\">\r\n  <img src=${sender.PK} alt=${sender.qW} />\r\n\r\n  </div>\r\n  <div class=\"message-text\">\r\n    <span class=\"text-paragraph\">${message}<span/>\r\n    <p class=\"date-paragraph\">${date}</p>\r\n  </div>`;\r\n  return message;\r\n};\r\n\r\n\r\n",["68","69"],"C:\\Development\\Projects\\BocUp\\client\\src\\reducers\\mainMessagesReducer.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\reducers\\privateRoomsReducer.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\components\\chat\\chatMessages\\PrivateChat.js",[],"C:\\Development\\Projects\\BocUp\\client\\src\\history.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":127,"column":75,"nodeType":"76","endLine":127,"endColumn":92},{"ruleId":"77","severity":1,"message":"78","line":210,"column":1,"nodeType":"79","messageId":"80","endLine":213,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":221,"column":1,"nodeType":"79","messageId":"80","endLine":239,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":1,"column":7,"nodeType":"83","messageId":"84","endLine":1,"endColumn":20},{"ruleId":"70","replacedBy":"85"},{"ruleId":"72","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'renderMessage' is assigned a value but never used.","Identifier","unusedVar",["87"],["88"],"no-global-assign","no-unsafe-negation"]